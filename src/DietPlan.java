/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Priyanka Thakur
 */
import java.awt.Color;
import java.sql.*;
import javax.swing.JOptionPane;
import project.ConnectionProvider;

public class DietPlan extends javax.swing.JFrame {

    /**
     * Creates new form DietPlan
     */
    public DietPlan() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(175, 100));
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/wrongsign1.jpg"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Algerian", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Diet plan.png"))); // NOI18N
        jLabel1.setText("Diet Plan");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 153, 255));
        jLabel2.setText("Member ID : ");

        jTextField1.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(255, 51, 51));

        jButton2.setBackground(new java.awt.Color(204, 255, 255));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 153, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(0, 153, 153));
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 153, 255));
        jLabel3.setText("Name");

        jTextField2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(0, 153, 153));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 153, 255));
        jLabel4.setText("Age");

        jTextField3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField3.setForeground(new java.awt.Color(0, 153, 153));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 153, 255));
        jLabel5.setText("Weight");

        jTextField4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField4.setForeground(new java.awt.Color(0, 153, 153));
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 153, 255));
        jLabel6.setText("Gym Plan");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 153, 255));
        jLabel7.setText("Membership Status");

        jTextField5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField5.setForeground(new java.awt.Color(0, 153, 153));

        jTextField6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField6.setForeground(new java.awt.Color(0, 153, 153));

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 153, 255));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/reset.png"))); // NOI18N
        jButton3.setText("Reset");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(296, 296, 296)
                .addComponent(jButton1)
                .addGap(18, 18, 18))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(18, 18, 18)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addGap(18, 18, 18)
                            .addComponent(jButton2)
                            .addGap(18, 18, 18)
                            .addComponent(jButton3))
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 114, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jButton1)))
                .addGap(58, 58, 58)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2)
                            .addComponent(jButton3))
                        .addGap(37, 37, 37)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap(74, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    //Search
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int checkid=0;
        String id = jTextField1.getText();
        String membershipStatus, gymPlan;
        String age, weight;
        try
        {
            Connection con = ConnectionProvider.getCon();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select * from member where id='"+id+"'");
            while(rs.next())
            {
                checkid=1;
                
                jTextField1.setEditable(false);
                jTextField2.setText(rs.getString(2));
                jTextField2.setEditable(false);
                jTextField3.setText(rs.getString(3));
                jTextField3.setEditable(false);
                jTextField4.setText(rs.getString(4));
                jTextField4.setEditable(false);
                jTextField5.setText(rs.getString(7));
                jTextField5.setEditable(false);
                jTextField6.setText(rs.getString(8));
                jTextField6.setEditable(false);
                jTextArea1.setEditable(false);
                
                
            }  
            if(checkid==0)
                    {
                        JOptionPane.showMessageDialog(null, "Member ID does not Exist");
                    }
            else
            {
                membershipStatus = jTextField6.getText();
                gymPlan = jTextField5.getText();
                age = jTextField3.getText();
                weight = jTextField4.getText();
                int a = Integer.parseInt(age);
                int w = Integer.parseInt(weight);
                
                if(membershipStatus.equals("Yes"))
                {
                    jTextArea1.setText("        *******YOU CAN FOLLOW THIS DIET PLAN*******\n\n");
                    if(gymPlan.equals("Keto Diet"))
                    {
                        
                        if(a>=5 && a<=15 && w>10)
                        {
                            //jTextArea1.setText("*******You must follow this Diet Plan*******\n\n");
                            String p1[] = {"Monday: Coconut milk served with fresh berries.\n                Cabbage soup with sausage.",
                                           "Tuesday: Chicken parmesan with tomato sauce and zucchini noodles. \n                Tuna salad in an avocado boat.", 
                                           "Wednesday: Toasted keto bread with avocado and smoked salmon. \n                     Broccoli-cheese soup.",
                                           "Thursday: Spaghetti squash boats with shrimp. \n                  Keto granola with coconut milk. ",
                                           "Friday: Scrambled eggs with creme fraiche and chives. \n             Pesto zucchini noodles with grilled chicken.",
                                           "Saturday: Cauliflower fried rice with chicken, eggs, and broccoli. \n                A breakfast sandwich with keto bread.",
                                           "Sunday : Quiche made with ham, cheese, and spinach.  \n                Smoothie with frozen strawberries."};
                                for (int s = 0; s < p1.length; s++)
                                {
                                    jTextArea1.append(p1[s]);
                                    jTextArea1.append("\n\n");
                                }
                        }
                        if(a>15 && a<=40 && w>20)
                        {
                            
                            String p1[] = {"Monday: Pancakes made with almond flour.\n                Eat Eggs in breakfast",
                                           "Tuesday: Full-fat coconut yogurt with mixed nuts and berries. \n                Tuna salad in an avocado boat.", 
                                           "Wednesday: Taco salad with chopped lettuce, ground turkey, \n                     Broccoli-cheese soup.",
                                           "Thursday: Spaghetti squash boats with shrimp. \n                  Lettuce wrap sandwich with romaine. ",
                                           "Friday: Bun-less cheeseburgers with homemade aioli and bacon.  \n             Pesto zucchini noodles with grilled chicken.",
                                           "Saturday:  Lettuce wraps with ground pork stir-fried with onions, \n                A breakfast sandwich with keto bread.",
                                           "Sunday : Quiche made with ham, cheese, and spinach.  \n                Smoothie with frozen strawberries."};
                                for (int s = 0; s < p1.length; s++)
                                {
                                    jTextArea1.append(p1[s]);
                                    jTextArea1.append("\n\n");
                                }        

                        }
                        if(a>40 && w>30)
                        {
                            //jTextArea1.setText("*******You must follow this Diet Plan*******\n\n");
                            String p1[] = {"Monday: Zucchini boats filled with Italian-flavored ground beef, sausage, and cheese.\n                Cabbage soup with sausage.",
                                           "Tuesday: Cauliflower fried rice with chicken, eggs, and broccoli. \n                Smoothie with frozen strawberries.", 
                                           "Wednesday: Toasted keto bread with avocado and smoked salmon. \n                     Broccoli-cheese soup.",
                                           "Thursday: Keto granola with coconut milk. \n                  Tuna salad in an avocado boat.",
                                           "Friday: Full-fat coconut yogurt with mixed nuts and berries. \n             Pesto zucchini noodles with grilled chicken.",
                                           "Saturday: Spaghetti squash boats with shrimp. \n                A breakfast sandwich with keto bread.",
                                           "Sunday : Quiche made with ham, cheese, and spinach.  \n                Smoothie with frozen strawberries."};
                                for (int s = 0; s < p1.length; s++)
                                {
                                    jTextArea1.append(p1[s]);
                                    jTextArea1.append("\n\n");
                                }
                        }
                    }
                    if(gymPlan.equals("Vegan Diet"))
                    {
                        if(a>=5 && a<=15 && w>10)
                        {
                            String p1[] = {"Monday: 2 tablespoons almond butter.\n                2 slices tomato,2 lettuce leaves.",
                                           "Tuesday: 20 roasted plantain chips. \n                1 cup cooked whole wheat noodles.", 
                                           "Wednesday: 1 cup unsweetened almond milk. \n                     1/4 cup pistchios, in the shell.",
                                           "Thursday: 2 tablespoons raspberry jam. \n                  2 cups chopped romaine lettuce. ",
                                           "Friday: 1 tablespoon chopped fresh cilantro. \n             1 cup grapes.",
                                           "Saturday: 1 slice toasted wheat bread,1 ounce almonds. \n                1/2 cup diced bell pepper.",
                                           "Sunday : 4 ounces firm tofu, 1 cup frozen mango.  \n                1/4 cup avocado, mashed."};
                                for (int s = 0; s < p1.length; s++)
                                {
                                    jTextArea1.append(p1[s]);
                                    jTextArea1.append("\n\n");
                                }
                        }
                        if(a>15 && a<=40 && w>20)
                        {
                            
                            String p1[] = {"Monday: 1/4 cup avocado, mashed.\n                1 slice toasted wheat bread",
                                           "Tuesday:  1 cup frozen blueberries, 1/2 frozen medium banana. \n                1 tablespoon balsamic vinegar.", 
                                           "Wednesday: 2 tablespoons chia seeds, a dash of salt \n                     1 red bell pepper, sliced",
                                           "Thursday: 2 tablespoons raspberry jam. \n                  1 tablespoon lime juice. ",
                                           "Friday: 1/2 cup diced bell pepper.  \n             1 tablespoon chopped fresh cilantro.",
                                           "Saturday:  1 cup chickpeas, rinsed and drained \n                1/2 cup diced bell pepper.",
                                           "Sunday : 1/4 cup shredded vegan cheese.  \n                2 tablespoons almond butter."};
                                for (int s = 0; s < p1.length; s++)
                                {
                                    jTextArea1.append(p1[s]);
                                    jTextArea1.append("\n\n");
                                }        

                        }
                        if(a>40 && w>30)
                        {
                            //jTextArea1.setText("*******You must follow this Diet Plan*******\n\n");
                            String p1[] = {"Monday: 2 tablespoons almond butter.\n                2 slices red onion.",
                                           "Tuesday: 1 tablespoon flax seeds, ice. \n                1 slice wheat bread.", 
                                           "Wednesday: 1/4 cup avocado, mashed. \n                     1/4 avocado diced, 1 tablespoon sriracha.",
                                           "Thursday: 6 ounces grilled firm tofu, seasoned to your liking. \n                  1-ounce cashews.",
                                           "Friday: 1 tablespoon balsamic vinegar. \n             2 cups lentil soup.",
                                           "Saturday: 1 tablespoon peanut butter. \n                1 tablespoon hemp seeds.",
                                           "Sunday : 1/4 cup baked sweet potatoes, diced.  \n                1 tablespoon olive oil."};
                                for (int s = 0; s < p1.length; s++)
                                {
                                    jTextArea1.append(p1[s]);
                                    jTextArea1.append("\n\n");
                                }
                        }
                    }
                    if(gymPlan.equals("Raw Food Diet"))
                    {
                        
                        if(a>=5 && a<=15 && w>10)
                        {
                            //jTextArea1.setText("*******You must follow this Diet Plan*******\n\n");
                            String p1[] = {"Monday: Kale, tomato, and sprouted bean salad .\n                1 cup green tea .",
                                           "Tuesday: 1 cup coconut water. \n                Fresh fruit juice.", 
                                           "Wednesday: Bell pepper, cucumber, and tomato. \n                     Baby carrot and hummus.",
                                           "Thursday: 4 almonds Or Banana and chocolate shake. \n                  Vegetable salad. ",
                                           "Friday: Zucchini salad + 1 piece of dark chocolate. \n             Puffed rice salad.",
                                           "Saturday: Milk, banana, and nut butter smoothie. \n                A breakfast sandwich with keto bread.",
                                           "Sunday : Raw papaya salad.  \n                Guacamole and watermelon."};
                                for (int s = 0; s < p1.length; s++)
                                {
                                    jTextArea1.append(p1[s]);
                                    jTextArea1.append("\n\n");
                                }
                        }
                        if(a>15 && a<=40 && w>20)
                        {
                            
                            String p1[] = {"Monday: Milk, banana, and nut butter smoothie.\n                1 cup coconut water",
                                           "Tuesday: Cucumber, carrot, and tomato. \n                 and sprouted lentil salad with olive oil and lime juice dressing.", 
                                           "Wednesday: Cucumber and kimchi, \n                     Carrot and cabbage salad with ¼ avocado.",
                                           "Thursday: sprouted chilled lentil soup (not heated). \n                  Apple  & 1 tablespoon raw nut butter. ",
                                           "Friday: 1 cup green tea .  \n             Chia seed pudding + handful of walnuts.",
                                           "Saturday:  Cucumber and tomato salad + buttermilk, \n                Oats smoothie.",
                                           "Sunday : 10 in-shell pistachios + ½ grapefruit.  \n                Raw papaya salad."};
                                for (int s = 0; s < p1.length; s++)
                                {
                                    jTextArea1.append(p1[s]);
                                    jTextArea1.append("\n\n");
                                }        

                        }
                        if(a>40 && w>30)
                        {
                            //jTextArea1.setText("*******You must follow this Diet Plan*******\n\n");
                            String p1[] = {"Monday: Lettuce, purple cabbage, olives, and cucumber salad.\n                Berry smoothie, handful of walnuts.",
                                           "Tuesday: Baby carrot and hummus. \n                Fresh fruit juice.", 
                                           "Wednesday: Spinach and banana smoothie. \n                     1 cup green tea .",
                                           "Thursday: Raw egg protein shake. \n                  Guacamole and watermelon.",
                                           "Friday: sprouted chilled lentil soup (not heated). \n             Avocado and cucumber salad.",
                                           "Saturday: 10 in-shell pistachios + ½ grapefruit. \n                A breakfast sandwich with keto bread.",
                                           "Sunday :  2 Brazil nuts,Raw egg protein shake .  \n                1 cup coconut water."};
                                for (int s = 0; s < p1.length; s++)
                                {
                                    jTextArea1.append(p1[s]);
                                    jTextArea1.append("\n\n");
                                }
                        }
                    } 
                    
                }
                else
                {
                    jTextArea1.setText("!!!!!!!PLEASE TAKE MEMBERSHIP FIRST!!!!!!!");
                }
            }
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    //Reset
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        setVisible(false);
        new DietPlan().setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DietPlan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DietPlan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DietPlan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DietPlan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DietPlan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    // End of variables declaration//GEN-END:variables
}
